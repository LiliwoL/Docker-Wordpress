# **************************************************************
# Docker compose pour un stack Wordpress - MariaDb et PhpMyAdmin
# **************************************************************

# Version de docker-compose
version: "3.3"


# Déclaration des services à utiliser
services:

  # ========================================
  # Container avec Wordpress
  # ========================================
  wordpress:
    container_name: wordpress
    # Quelle image utilise t on? cf. https://hub.docker.com/search?q=&type=image
    image: wordpress:latest

    # Redirection de ports entre l'hôte et le container
    ports:
      # La machine locale ouvre le port 8080 qui "pointe" vers le port 80 du container
      - 8087:80

    # Dépendance du container Wordpress avec le container wordpress-db
    depends_on:
      - wordpress-db

    # Politique de redémarrage en cas d'arrêt
    restart: unless-stopped

    # Volumes partagés entre l'hôte et le container
    volumes:
      # On partage le fichier de configuration php.ini
      - ./config/wp_php.ini:/usr/local/etc/php/conf.d/conf.ini

      # On partage le dossier de travail de Wordpress
      - ./wp-app:/var/www/html # Full wordpress project

    # Variables d'environnement définies dans le fichier .env
    environment:
      # Utilisation du nom du container pour la connexion à la base de données
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_PORT: 3308
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: "${DB_USER}"
      WORDPRESS_DB_PASSWORD: "${DB_PASSWORD}"

  # ========================================
  # Container avec MariaDb
  # ========================================
  wordpress-db:
    container_name: wordpress-db
    # Quelle image utilise t on? cf. https://hub.docker.com/search?q=&type=image
    image: mariadb:latest

    # Comportement en cas de plantage
    restart: unless-stopped

    # Volumes partagés entre l'hôte et le container
    volumes:
      - ./db_data:/var/lib/mysql

    # Variables d'environnement définies dans le fichier .env
    # https://mariadb.com/kb/en/mariadb-server-docker-official-image-environment-variables/
    environment:
      # Mot de passe de l'utilisateur root
      MARIADB_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MARIADB_DATABASE: "${DB_NAME}"
      MARIADB_USER: "${DB_USER}"
      MARIADB_PASSWORD: "${DB_PASSWORD}"

    # Redirection de ports
    ports:
      # La machine locale ouvre le port 3308 qui "pointe" vers le port 3306 du container
      - 3308:3306


  # ========================================
  # Container avec PhpMyAdmin
  # ========================================
  phpmyadmin:
    container_name: wordpress-phpmyadmin

    # Quelle image utilise t on? cf. https://hub.docker.com/search?q=&type=image
    image: phpmyadmin:latest

    # Comportement en cas de plantage
    restart: unless-stopped

    volumes:
      - ./config/pma_php.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./config/pma_config.php:/etc/phpmyadmin/config.user.inc.php

    # Variables d'environnement
    # https://docs.phpmyadmin.net/en/latest/setup.html#docker-environment-variables
    environment:
      # A quel hôte
      PMA_HOST: wordpress-db
      PMA_PORT: 3308
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      UPLOAD_LIMIT: 50M

    # Redirection de ports
    ports:
      # La machine locale ouvre le port 8081 qui "pointe" vers le port 80 du container
      - 8081:80

    # Dépendance du container PhpMyAdmin avec le container wordpress-db
    depends_on:
      - wordpress-db


  # ========================================
  # Container avec le backup de la base de données
  # ========================================
  wordpress-db-backup:
    container_name: wordpress-db-backup
    image: tiredofit/db-backup
    volumes:
      - ./backups:/backup
    restart: unless-stopped
    environment:
      DB_TYPE: mysql
      DB_HOST: wpordpress-db
      DB_PORT: 3308
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASS: "${DB_PASSWORD}"

      # Time in minutes between backups
      DB_BACKUP_INTERVAL: 720
      # Time in minutes to keep backups
      DB_CLEANUP_TIME: 72000
      #DB_BACKUP_BEGIN: 1
      CHECKSUM: SHA1
      COMPRESSION: GZ
      CONTAINER_ENABLE_MONITORING: "false"
    depends_on:
      - wordpress-db


  # ========================================
  # Container avec REDIS
  # ========================================
  redis:
    container_name: wordpress-redis
    image: redis
    restart: unless-stopped

    # Pour fonctionner, il faut ajouter ces lignes dans le fichier wp-config.php dans le dossier wp-app
    # define('WP_REDIS_HOST', 'redis');
    # define('WP_REDIS_PORT', '6379');

    # Ne pas oublier d'ajouter le plugin Wordpress Redis
    # https://wordpress.org/plugins/redis-cache/